using System;
using System.Collections.Generic;

class Program
{
    static List<int> DfsWithStack(Dictionary<int, List<int>> graph, int start)
    {
        var stack = new Stack<int>(); // Стек для хранения вершин
        var visited = new HashSet<int>(); // Множество для отслеживания посещённых вершин
        var result = new List<int>(); // Список для записи порядка обхода

        stack.Push(start); // Добавить начальную вершину в стек

        while (stack.Count > 0)
        {
            var node = stack.Pop(); // Достать вершину из стека

            if (!visited.Contains(node))
            {
                visited.Add(node); // Отметить вершину как посещенную
                result.Add(node); // Добавить вершину в результат

                // Добавить в стек соседей в обратном порядке
                // чтобы при обходе использовался правильный порядок
                foreach (var neighbor in graph[node])
                {
                    if (!visited.Contains(neighbor))
                    {
                        stack.Push(neighbor);
                    }
                }
            }
        }

        return result;
    }
}

